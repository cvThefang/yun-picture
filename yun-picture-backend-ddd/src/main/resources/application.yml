server:
  port: 10086
  servlet:
    context-path: /api
    # cookie:配置 过期时间 30天
    session:
      cookie:
        # session 过期时间 30天
        max-age: 2592000
spring:
  main:
    # 项目启动时打印banner CONSOLE:控制台输出，默认方式; LOG:日志输出; OFF:不输出
    banner-mode: console
  application:
    name: yun-picture-backend
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # &serverTimezone=UTC mysql服务器时区与服务器时区需要保持一致，因为服务器时区是Asia/Shanghai此时设置为UTC（UTC 相当于零时区的时间）就会将所有存储的时间增加8小时，导致时间显示错误·
    url: jdbc:mysql://localhost:3306/shark_pic?useUnicode=true&characterEncoding=utf-8&useSSL=false&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai
    username: root
    password: 123456
  # Redis 配置
  redis:
    host: 127.0.0.1
    port: 6379
    database: 1
    timeout: 5000
  # Session配置  30天后过期
  session:
    store-type: redis
    # 设置session过期时间为 30天 单位为秒 30 * 24 * 60 * 60
    timeout: 2592000
  # servlet配置 开放更大的文件上传体积 spring的web默认文件上传为1M
  servlet:
    multipart:
      max-file-size: 10MB
  # shardingsphere 分库分表配置 空间图片分表
  shardingsphere:
    datasource:
      names: shark_pic
      shark_pic:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/shark_pic
        username: root
        password: 123456
    rules:
      sharding:
        tables:
          picture:
            # 动态分表
            actual-data-nodes: shark_pic.picture
            table-strategy:
              standard:
                sharding-column: spaceId
                # 使用自定义分片算法
                sharding-algorithm-name: picture_sharding_algorithm
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.thefang.yunpicturebackend.manager.sharding.PictureShardingAlgorithm
    props:
      # 打印sql  （仅在开发环境打印日志） 线上环境不建议开启
      sql-show: true
# mybatis-plus 配置
mybatis-plus:
  configuration:
    # 下划线转成驼峰命名
    map-underscore-to-camel-case: false
    # 打印sql  （仅在开发环境打印日志）
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 逻辑删除配置
  global-config:
    db-config:
      logic-delete-field: isDelete  # 全局逻辑删除字段值
      logic-delete-value: 1  # 逻辑删除值（默认为 1）
      logic-not-delete-value: 0  # 逻辑未删除值（默认为 0）
    enable-sql-runner: true # 使用自定义SQL执行器
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: v1.0
    license: Apache 2.0
    description: "这是一个神奇的接口文档~"
    concat: Thefang
    group:
      # 默认分组
      default:
        group-name:
        api-rule: package
        api-rule-resources:
          - com.thefang.yunpicturebackend.controller
## 对象存储配置（需要从腾讯云获取）
#cos:
#  client:
#    host: xxx
#    secretId: xxx
#    secretKey: xxx
#    region: xxx
#    bucket: xxx

## 阿里云 AI 配置
#aliYunAi:
#  apiKey: xxx

